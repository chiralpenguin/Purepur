From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: BillyGalbreath <blake.galbreath@gmail.com>
Date: Thu, 3 Dec 2020 17:56:18 -0600
Subject: [PATCH] Lobotomize stuck villagers


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index d089d5cc5fc6a2df25b06a8a0079c1442706f29c..6e858e4cddfbab1e7913195aa97035a7eff83da9 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -114,7 +114,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public double lastY;
     public double lastZ;
     private Vec3D loc;
-    private BlockPosition locBlock;
+    private BlockPosition locBlock; public BlockPosition getBlockLocation() { return locBlock; } // Purpur
     private Vec3D mot;
     public float yaw;
     public float pitch;
diff --git a/src/main/java/net/minecraft/server/EntityVillager.java b/src/main/java/net/minecraft/server/EntityVillager.java
index 4491b2199acd4ba9706d82c7e69d80fbc6083344..f4514557fc50faf09f852fbc90a4f11dd660564c 100644
--- a/src/main/java/net/minecraft/server/EntityVillager.java
+++ b/src/main/java/net/minecraft/server/EntityVillager.java
@@ -164,11 +164,32 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
 
     private int behaviorTick = 0;
 
+    // Purpur start
+    boolean lobotomized = false;
+
+    private boolean isLobotomized() {
+        if ((world.getTime() + brainTickOffset) % world.purpurConfig.villagerLobotomizeCheck == 0) {
+            this.lobotomized = !canTravelFrom(getBlockLocation().up());
+        }
+        return this.lobotomized;
+    }
+
+    private boolean canTravelFrom(BlockPosition pos) {
+        return canTravelTo(pos.east()) || canTravelTo(pos.west()) || canTravelTo(pos.north()) || canTravelTo(pos.south());
+    }
+
+    private boolean canTravelTo(BlockPosition pos) {
+        PathEntity to = navigation.calculateDestination(pos, 0);
+        return to != null && to.getPoints().size() > 1;
+    }
+    // Purpur end
+
     @Override
     protected void mobTick() { mobTick(false); }
     protected void mobTick(boolean inactive) {
         this.world.getMethodProfiler().enter("villagerBrain");
         // Purpur start
+        if (world.purpurConfig.villagerLobotomizeEnabled) inactive = inactive || isLobotomized();
         boolean tick = (world.getTime() + brainTickOffset) % world.purpurConfig.villagerBrainTicks == 0;
         if (((WorldServer) world).getMinecraftServer().lagging ? tick : world.purpurConfig.villagerUseBrainTicksOnlyWhenLagging || tick)
         // Purpur end
@@ -177,6 +198,8 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
                 this.getBehaviorController().a((WorldServer) this.world, this); // CraftBukkit - decompile error // Paper
             }
         }
+        else if (shouldRestock()) doRestock(); // Purpur
+
         this.world.getMethodProfiler().exit();
         if (this.bF) {
             this.bF = false;
@@ -307,6 +330,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
         return true;
     }
 
+    public void doRestock() { fb(); } // Purpur - OBFHELPER
     public void fb() {
         this.fp();
         Iterator iterator = this.getOffers().iterator();
@@ -341,6 +365,7 @@ public class EntityVillager extends EntityVillagerAbstract implements Reputation
         return this.bD == 0 || this.bD < 2 && this.world.getTime() > this.bC + 2400L;
     }
 
+    public boolean shouldRestock() { return fc(); } // Purpur - OBFHELPER
     public boolean fc() {
         long i = this.bC + 12000L;
         long j = this.world.getTime();
diff --git a/src/main/java/net/minecraft/server/NavigationAbstract.java b/src/main/java/net/minecraft/server/NavigationAbstract.java
index be243d411abf68686e75d46023c93fb8bb5c84e0..88368ae1633cf8bfb845d52b38110a6828fcf699 100644
--- a/src/main/java/net/minecraft/server/NavigationAbstract.java
+++ b/src/main/java/net/minecraft/server/NavigationAbstract.java
@@ -101,6 +101,7 @@ public abstract class NavigationAbstract {
     }
 
     @Nullable
+    public PathEntity calculateDestination(BlockPosition blockposition, int i) { return a(blockposition, i); } // Purpur - OBFHELPER
     public PathEntity a(BlockPosition blockposition, int i) {
         // Paper start - add target parameter
         return this.a(blockposition, null, i);
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index 45c9f32d40226d8f8bdcca391e431fab89cb5688..f7369a5e5527c02a7a3d2321797bff15aa829581 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -88,9 +88,13 @@ public class PurpurWorldConfig {
 
     public int villagerBrainTicks = 1;
     public boolean villagerUseBrainTicksOnlyWhenLagging = true;
+    public boolean villagerLobotomizeEnabled = false;
+    public int villagerLobotomizeCheck = 60;
     private void villagerSettings() {
         villagerBrainTicks = getInt("mobs.villager.brain-ticks", villagerBrainTicks);
         villagerUseBrainTicksOnlyWhenLagging = getBoolean("mobs.villager.use-brain-ticks-only-when-lagging", villagerUseBrainTicksOnlyWhenLagging);
+        villagerLobotomizeEnabled = getBoolean("mobs.villager.lobotomize.enabled", villagerLobotomizeEnabled);
+        villagerLobotomizeCheck = getInt("mobs.villager.lobotomize.check-interval", villagerLobotomizeCheck);
     }
 
     public boolean squidImmuneToEAR = true;
