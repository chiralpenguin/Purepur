From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Thu, 3 Dec 2020 17:56:18 -0600
Subject: [PATCH] Lobotomize stuck villagers


diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 5d6f7e84991cc94c4c24519a825c9902f256465c..c2e72221284310a9408afb53a0b6478d6d3ac5ac 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -142,6 +142,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         return villageplacetype == PoiType.MEETING;
     });
     private final int brainTickOffset; // Purpur
+    boolean lobotomized = false; // Purpur
 
     public long nextGolemPanic = -1; // Airplane
 
@@ -159,6 +160,24 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         this.brainTickOffset = getRandom().nextInt(100); // Purpur
     }
 
+    // Purpur start
+    private boolean isLobotomized() {
+        if ((level.getGameTime() + brainTickOffset) % level.purpurConfig.villagerLobotomizeCheck == 0) {
+            this.lobotomized = !canTravelFrom(blockPosition().above());
+        }
+        return this.lobotomized;
+    }
+
+    private boolean canTravelFrom(BlockPos pos) {
+        return canTravelTo(pos.east()) || canTravelTo(pos.west()) || canTravelTo(pos.north()) || canTravelTo(pos.south());
+    }
+
+    private boolean canTravelTo(BlockPos pos) {
+        net.minecraft.world.level.pathfinder.Path to = navigation.createPath(pos, 0);
+        return to != null && to.nodes.size() > 0;
+    }
+    // Purpur end
+
     @Override
     public Brain<Villager> getBrain() {
         return (Brain<Villager>) super.getBrain(); // CraftBukkit - decompile error
@@ -255,6 +274,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     protected void mobTick(boolean inactive) {
         this.level.getProfiler().push("villagerBrain");
         // Purpur start
+        if (level.purpurConfig.villagerLobotomizeEnabled) inactive = inactive || isLobotomized();
         boolean tick = (level.getGameTime() + brainTickOffset) % level.purpurConfig.villagerBrainTicks == 0;
         if (((ServerLevel) level).getServer().lagging ? tick : level.purpurConfig.villagerUseBrainTicksOnlyWhenLagging || tick)
         // Purpur end
@@ -264,6 +284,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
             this.getBrain().tick((ServerLevel) this.level, this);
          }
         // Airplane end
+        else if (shouldRestock()) restock(); // Purpur
         this.level.getProfiler().pop();
         if (this.assignProfessionWhenSpawned) {
             this.assignProfessionWhenSpawned = false;
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index a0237fbe203d0b0690a29f0dcf8fc00e6256afca..49cad8f2c1e15a92dad4dc50e7c7743c490e8e69 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -129,10 +129,14 @@ public class PurpurWorldConfig {
     }
 
     public int villagerBrainTicks = 1;
+    public boolean villagerLobotomizeEnabled = false;
+    public int villagerLobotomizeCheck = 60;
     public boolean villagerUseBrainTicksOnlyWhenLagging = true;
     private void villagerSettings() {
         villagerBrainTicks = getInt("mobs.villager.brain-ticks", villagerBrainTicks);
         villagerUseBrainTicksOnlyWhenLagging = getBoolean("mobs.villager.use-brain-ticks-only-when-lagging", villagerUseBrainTicksOnlyWhenLagging);
+        villagerLobotomizeEnabled = getBoolean("mobs.villager.lobotomize.enabled", villagerLobotomizeEnabled);
+        villagerLobotomizeCheck = getInt("mobs.villager.lobotomize.check-interval", villagerLobotomizeCheck);
     }
 
     public boolean zombieAggressiveTowardsVillagerWhenLagging = true;
